// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=n10, b=n11, c=n12, d=n13, e=n14, f=n15, g=n16, h=n17);
    Register(in=in, load=n10, out=k0);
    Register(in=in, load=n11, out=k1);
    Register(in=in, load=n12, out=k2);
    Register(in=in, load=n13, out=k3);
    Register(in=in, load=n14, out=k4);
    Register(in=in, load=n15, out=k5);
    Register(in=in, load=n16, out=k6);
    Register(in=in, load=n17, out=k7);
    Mux8Way16(a=k0, b=k1, c=k2, d=k3, e=k4, f=k5, g=k6, h=k7, sel=address, out=out);
}